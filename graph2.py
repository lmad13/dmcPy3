import numpy as np
import matplotlib.pyplot as plt
#graph psi, psi squared, potential energy surface of Harmonic oscillator fit using hardcoded in values

#potential energy surface
scfdone='4.41984094e-03 3.24723008e-03 2.25502089e-03 1.44321337e-03 8.11807520e-04 3.60803342e-04 9.02008356e-05 9.02008356e-05 3.60803342e-04 8.11807520e-04 1.44321337e-03 2.25502089e-03 3.24723008e-03 4.41984094e-03'

scfdone2 = str.split(scfdone)
scfdone3=[]
for i in scfdone2:
    scfdone3.append(float(i))
scfdone = np.array(scfdone3)

#potential energy surface xdata
pxdata = '2.96 3.06 3.16 3.26 3.36 3.46 3.56 3.76 3.86 3.96 4.06 4.16 4.26 4.36'

pxdata2 = str.split(pxdata)
pxdata3 = []
for f in pxdata2:
    pxdata3.append(float(f))
pxdata = np.array(pxdata3)


#ydata
ydata = '5.080923e-03 3.048065e-03 1.743530e-03 9.284800e-04 4.387520e-04 1.643530e-04 3.343000e-05 0.000000e+00 3.592500e-05 1.222490e-04 1.222490e-04 2.469230e-04 3.990110e-04 5.686370e-04 7.457970e-04 9.228480e-04 1.090627e-03 1.244252e-03 1.379021e-03 1.495127e-03 1.590694e-03 1.668095e-03 1.728700e-03 1.775436e-03 1.811979e-03 1.839491e-03'

ydata2 = str.split(ydata)
ydata3 = []
for e in ydata2:
    ydata3.append(float(e))
ydata = np.array(ydata3)

#b7
b7 = '2.96 3.06 3.16 3.26 3.36 3.46 3.56 3.66 3.76 3.86 3.86 3.96 4.06 4.16 4.26 4.36 4.46 4.56 4.66 4.76 4.86 4.96 5.06 5.16 5.26 5.36'

b72 = str.split(b7)
b73=[]
for a in b72:
    b73.append(float(a))
b7 = np.array(b73)

#psi
psi = '2.00120104e-04 2.33486804e-04 3.00113409e-04 3.33506808e-04 5.33493419e-04 4.66920211e-04 9.00393626e-04 1.30047364e-03 1.43402054e-03 1.60077394e-03 2.70139447e-03 2.86804108e-03 4.06838792e-03 4.06852141e-03 5.50256865e-03 6.70312908e-03 8.17040952e-03 8.37042283e-03 9.97114338e-03 1.15047567e-02 1.23393781e-02 1.54405856e-02 1.67413529e-02 1.82085533e-02 1.81750264e-02 2.12435347e-02 2.16098475e-02 2.35440481e-02 2.61455561e-02 2.66459498e-02 2.82461364e-02 2.95135370e-02 3.02804638e-02 2.94811582e-02 2.98805707e-02 3.09143243e-02 3.18150917e-02 3.27817382e-02 3.18815048e-02 2.88796498e-02 2.85804708e-02 3.10482717e-02 2.92142513e-02 2.67125497e-02 2.40783425e-02 2.34772614e-02 2.34441616e-02 2.05762274e-02 2.11765343e-02 1.86755002e-02 1.77416865e-02 1.56739656e-02 1.54746198e-02 1.42395713e-02 1.30393847e-02 1.14051906e-02 1.00377700e-02 1.02382639e-02 8.70387624e-03 7.67062989e-03 6.80330928e-03 6.13616217e-03 5.33584194e-03 4.03502122e-03 3.96836791e-03 4.36860812e-03 3.06810778e-03 3.03476778e-03 2.33436077e-03 2.03422066e-03 1.63403385e-03 1.56738054e-03 1.56732715e-03 1.50075394e-03 8.67080323e-04 7.67060319e-04 8.00373622e-04 4.66813416e-04 5.67047010e-04 5.67047010e-04 4.00160112e-04 3.66793412e-04 3.66900207e-04 2.33433407e-04 1.00046703e-04 6.66800027e-05 1.00020004e-04 3.33400013e-05 6.67334001e-05 3.33400013e-05 6.67334001e-05 0.00000000e+00 3.33400013e-05 1.33413403e-04 0.00000000e+00 3.33400013e-05 0.00000000e+00 0.00000000e+00 0.00000000e+00 3.33667000e-05'

psi2 = str.split(psi)

psi3 = []
for b in psi2:
    psi3.append(float(b))

psi = np.array(psi3)

#psi squared
psisqrt = '1.19362575e-06 2.08529335e-06 3.29188346e-06 3.60043643e-06 1.17180249e-05 6.42072122e-06 2.82765809e-05 6.41982048e-05 8.54666898e-05 1.01916327e-04 3.00660003e-04 3.56101032e-04 7.20569113e-04 7.03635660e-04 1.20393496e-03 1.89542972e-03 2.79105971e-03 2.99124164e-03 4.42529497e-03 5.94804685e-03 6.79676019e-03 1.06172063e-02 1.25348275e-02 1.49448663e-02 1.49962018e-02 2.03669648e-02 2.12096166e-02 2.50504061e-02 3.10946858e-02 3.22941112e-02 3.60953021e-02 3.98259509e-02 4.18554793e-02 3.98668504e-02 4.11413630e-02 4.36057644e-02 4.62242607e-02 4.91618555e-02 4.64629491e-02 3.79511330e-02 3.71720142e-02 4.40255016e-02 3.91607884e-02 3.21549523e-02 2.62800779e-02 2.51304787e-02 2.49716289e-02 1.91831523e-02 2.01236414e-02 1.56197438e-02 1.41374866e-02 1.09782465e-02 1.08266801e-02 9.10877597e-03 7.52149982e-03 5.80707328e-03 4.48828559e-03 4.63529745e-03 3.32267782e-03 2.65302500e-03 2.00659759e-03 1.67202427e-03 1.25599907e-03 6.81600123e-04 7.04468675e-04 8.07417730e-04 4.13100468e-04 4.10566009e-04 2.27383197e-04 1.69174671e-04 1.20164288e-04 1.16701001e-04 1.03123766e-04 1.05745990e-04 3.13771245e-05 2.57109026e-05 3.15411416e-05 1.13679369e-05 1.89363829e-05 1.50427575e-05 6.90887520e-06 7.16178866e-06 7.91777291e-06 3.16377803e-06 7.53652876e-07 5.96666098e-07 7.47938732e-07 1.49166525e-07 5.94249360e-07 1.51272634e-07 5.94249360e-07 0.00000000e+00 1.51272634e-07 1.19091546e-06 0.00000000e+00 1.51272634e-07 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00'

psisqrt2 = str.split(psisqrt)
psisqrt3 = []
for c in psisqrt2:
    psisqrt3.append(float(c))
psisqrt = np.array(psisqrt3)

#bin
bin = '3.03969841 3.05693772 3.07417703 3.09141634 3.10865565 3.12589496 3.14313427 3.16037357 3.17761288 3.19485219 3.2120915  3.22933081 3.24657012 3.26380943 3.28104874 3.29828805 3.31552736 3.33276667 3.35000597 3.36724528 3.38448459 3.4017239  3.41896321 3.43620252 3.45344183 3.47068114 3.48792045 3.50515976 3.52239907 3.53963837 3.55687768 3.57411699 3.5913563  3.60859561 3.62583492 3.64307423 3.66031354 3.67755285 3.69479216 3.71203147 3.72927077 3.74651008 3.76374939 3.7809887  3.79822801 3.81546732 3.83270663 3.84994594 3.86718525 3.88442456 3.90166387 3.91890317 3.93614248 3.95338179 3.9706211  3.98786041 4.00509972 4.02233903 4.03957834 4.05681765 4.07405696 4.09129627 4.10853557 4.12577488 4.14301419 4.1602535 4.17749281 4.19473212 4.21197143 4.22921074 4.24645005 4.26368936 4.28092867 4.29816797 4.31540728 4.33264659 4.3498859  4.36712521 4.38436452 4.40160383 4.41884314 4.43608245 4.45332176 4.47056107 4.48780037 4.50503968 4.52227899 4.5395183  4.55675761 4.57399692 4.59123623 4.60847554 4.62571485 4.64295416 4.66019347 4.67743278 4.69467208 4.71191139 4.7291507  4.74639001'

bin2 = str.split(bin)
bin3 = []
for d in bin2:
    bin3.append(float(d))
bin = np.array(bin3)

fig1 = plt.figure(1)
ax1 = fig1.add_subplot(211)
ax2 = fig1.add_subplot(212)

ax1.plot(bin, psi, label = 'Psi')
ax1.plot(bin, psisqrt, label = 'Psi Squared')
ax1.set_xlim(np.amin(bin),np.amax(bin))
ax1.legend()
ax1.set_xlabel('Oxygen-Carbon Bond Length (Angstrom)',fontsize=17)
ax1.set_ylabel('Frequency',fontsize=17)
ax1.tick_params(labelsize=13)
ax1.grid()
ax1.legend()


ax2.plot(pxdata, scfdone,'--', label = 'Harmonic Oscillator Fit')
ax2.plot(b7, ydata, 'o', label = 'SCF Energy')
ax2.set_xlim(np.amin(bin),np.amax(bin))
ax2.axhline(y=4.196214815142556e-09,c='red',label='Zero-point energy')
ax2.legend()
ax2.grid(axis='x')
ax2.tick_params(labelsize=13)
ax2.set_ylabel('SCF Energy (Hartree)',fontsize=17)
ax2.set_xlabel('Oxygen-Carbon Bond Length (Angstrom)',fontsize=17)
plt.show()
